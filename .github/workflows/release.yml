# Copied from: https://github.com/timheuer/SimpleFrameworkApp/blob/3169a4cf6f8a72cce1b0c9e69dcf630b8a94ed86/.github/workflows/build.yml
# See also the associated blog: https://timheuer.com/blog/building-net-framework-apps-using-github-actions/

name: Release

permissions:
  contents: write

on:
  push:
    tags: ['*']
    # branches: [ "main" ]

env:
  APP_NAME: VirtualDesktopManager.sln  # set this to your application's name

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2
      # with:
      #   vs-version: "[16.4,16.9)"

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2

    - name: Setup Node.js
      uses: actions/setup-node@v3

    - name: Build JavaScript Client (Without generating new ProtoBuf bindings)
      run: |
        cd ./virtual-desktop-client/client-js
        npm install
        npm run build

    - name: Restore NuGet packages
      run: nuget restore ${{ env.APP_NAME }}

    - name: Build
      run: msbuild ${{ env.APP_NAME }} /p:Configuration=Release

    - name: Publish artifacts
      uses: actions/upload-artifact@v4
      with:
        name: VirtualDesktopManager
        path: "VirtualDesktopManager/bin/Release/"

    - name: Zip release files
      run: powershell Compress-Archive VirtualDesktopManager/bin/Release/ VirtualDesktopManager.zip

    # Create the release:  https://github.com/actions/create-release
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{github.ref}}
        release_name: VirtualDesktopManager Version ${{ github.ref }}
        draft: false
        prerelease: false

    # Upload release asset:   https://github.com/actions/upload-release-asset
    - name: Upload release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: VirtualDesktopManager.zip
        asset_name: VirtualDesktopManager.zip
        asset_content_type: application/zip
